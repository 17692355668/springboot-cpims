properties:
    mysql: 127.0.0.1
    redis: 127.0.0.1

spring:
    #数据源
    datasource:
        #数据库连接四要素 -----------------------------------------------------------------------------------------------
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://${properties.mysql}:3306/javakc82?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=UTF-8&useSSL=false
        username: root
        password: 123456
        #schema数据库初始化 ---------------------------------------------------------------------------------------------
        #数据库DDL 初始化表结构 drop create
        schema: classpath:sql/schema.sql
        #数据库初始化模式R
        #数据库DML insert into
        data: classpath:sql/data.sql
        initialization-mode: never
        #  initialization-mode: always
        #当遇到导入异常时，终止运行
        continue-on-error: false
        #配置druid连接池 ------------------------------------------------------------------------------------------------
        type: com.alibaba.druid.pool.DruidDataSource
        #druid 数据源专有配置
        druid:
            #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
            initialSize: 5
            #最小连接池数量
            minIdle: 5
            #最大连接池数量
            maxActive: 20
            #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，
            #如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
            maxWait: 60000
            #1) Destroy线程会检测连接的间隔时间
            #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
            timeBetweenEvictionRunsMillis: 60000
            #连接保持空闲而不被驱逐的最小时间
            minEvictableIdleTimeMillis: 300000
            #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
            #如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
            validationQuery: SELECT 1 FROM DUAL
            #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
            testWhileIdle: true
            #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
            testOnBorrow: false
            #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
            testOnReturn: false
            #配置监控统计拦截的filters，stat:监控统计、wall：防御sql注入
            filters: stat,wall,config
            # 打开PSCache
            poolPreparedStatements: true
            #指定每个连接上PSCache的大小
            maxPoolPreparedStatementPerConnectionSize: 20
            #合并多个DruidDataSource的监控数据
            useGlobalDataSourceStat: true
            #通过connectProperties属性来打开mergeSql功能；慢SQL记录
            connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    redis:
        host: ${properties.redis}
        port: 6379
        password:
        database: 0
        lettuce:
            #关闭超时时间
            shutdown-timeout: 100
            #连接池配置属性
            pool:
                #连接池最大连接数
                max-active: 8
                #连接池中的最大空闲连接
                max-idle: 8
                #连接池中的最小空闲连接
                min-idle: 0
                #连接池最大阻塞等待时间
                max-wait: 30ms
        sentinel:
            master: mymaster
            nodes: 127.0.0.1:16379,127.0.0.1:16380,127.0.0.1:16381
    security:
        jwt:
            header: Authorization
            prefix: "Bearer"
            secret: secret
            issuer: "https://127.0.0.1/"
            expiration: 3600
            remember: 604800
            claimsAuthoritites: authorities

mybatis:
    #可选编程配置
    configuration:
        #日志输出(生产环境需关闭)
        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
        #开启驼峰功能 user_name -> userName
        map-underscore-to-camel-case: true
        #是否启用缓存
        cache-enabled: true
    #mybatis映射文件路径
    mapper-locations: classpath:/mapper/*.xml
    #扫描mybatis映射类提供别名
    type-aliases-package: com.javakc.springbootcpims.modules.*.entity